@model GedsiHub.Models.LessonContent

@{
    Layout = "_LayoutApp";
    ViewData["Title"] = "Lesson Content";
}


<!-- Lesson Details Content Page -->
<div>
    <!-- Breadcrumbs -->
    <ol class="breadcrumb" id="breadcrumb">
        <li class="breadcrumb-item">
            <!-- Proceed to list of module page (Module/Index) -->
            <a asp-controller="Module" asp-action="Index"><span>Modules</span></a>

        </li>
        <li class="breadcrumb-item">
            <!-- Proceed to list of lesson page (Module/Details) -->

            <a asp-action="Details" asp-controller="Module">
                <span id="module_number" class="module_number">~insert module title~</span>
            </a>
        </li>
        <!-- Current lesson page -->
        <li class="breadcrumb-item">
            <a asp-action="Create"><span id="cms_lesson_breadcrumb">Lesson<span id="lesson_number" class="module_number">~insert lesson number~</span></span></a>
        </li>
    </ol>


    <!-- Lesson Title: Should be fetch from the Lesson.Title -->
    <span id="added_module_title" class="added_module_title">@Model.Lesson.Title</span>


    <!-- White Container -->
    <div class="cms_white_base_container">
        <!-- Preview of the H5P content -->
        @if (!string.IsNullOrEmpty(Model.H5PEmbedCode))
        {
            <div class="embed-responsive responsive-iframe">
                @Html.Raw(Model.H5PEmbedCode)
            </div>
        }

        <!-- Preview of the text content -->
        @if (!string.IsNullOrEmpty(Model.TextContent))
        {
            @* <div class="text-content-preview">
        <p>@Model.TextContent</p>
        </div> *@
            <div class="embed-responsive responsive-iframe">
                @Html.Raw(Model.TextContent)
            </div>
        }

        <!-- Preview of the image content -->
        @if (!string.IsNullOrEmpty(Model.ImageUrl))
        {
            <div class="image-content-preview">
                <img src="@Model.ImageUrl" alt="Lesson Image" />
            </div>
        }

        <!-- Buttons for managing lesson content -->
        <div class="lesson_content_buttons">

            <!-- Edit button -->
            <a asp-action="Edit" asp-controller="LessonContent" asp-route-id="@Model.ContentId" class="editLessonContentButton">
                <i class="f-icon la la-edit"></i>Edit
            </a>


            <!-- Delete button -->
            <form asp-action="DeleteConfirmed" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                <button type="submit" class="deleteLessonContentButton">
                    <i class="f-icon la la-trash"></i> Delete
                </button>
            </form>

            
            <!-- Publish/Unpublish button -->
            @if (Model.IsPublished)
            {
                <form asp-action="Unpublish" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="publishUnpublishButton">
                        <i class="fs-icon fa fa-globe" aria-hidden="true"></i>Unpublish
                        
                    </button>
                </form>
            }
            else
            {
                <form asp-action="Publish" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="publishUnpublishButton">
                        <i class="fs-icon fa fa-globe" aria-hidden="true"></i>Publish
                    </button>
                </form>
            }

            
        </div>

    </div>
    <div class="lesson-content-preview">
        <h2>@Model.Lesson.Title</h2>

        <!-- Preview of the H5P content -->
        @if (!string.IsNullOrEmpty(Model.H5PEmbedCode))
        {
            <div class="responsive-iframe">
                @Html.Raw(Model.H5PEmbedCode)
            </div>
        }

        <!-- Preview of the text content -->
        @if (!string.IsNullOrEmpty(Model.TextContent))
        {
            @* <div class="text-content-preview">
        <p>@Model.TextContent</p>
        </div> *@
            <div class="responsive-iframe">
                @Html.Raw(Model.TextContent)
            </div>
        }

        <!-- Preview of the image content -->
        @if (!string.IsNullOrEmpty(Model.ImageUrl))
        {
            <div class="image-content-preview">
                <img src="@Model.ImageUrl" alt="Lesson Image" />
            </div>
        }

        <!-- Buttons for managing lesson content -->
        <div class="lesson-content-buttons">
            <!-- Edit button -->
            <a asp-action="Edit" asp-controller="LessonContent" asp-route-id="@Model.ContentId" class="btn btn-warning">
                Edit
            </a>


            <!-- Delete button -->
            <form asp-action="DeleteConfirmed" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger">Delete</button>
            </form>

            
            else
            {
                <form asp-action="Publish" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-success">Publish</button>
                </form>
            }

            <!-- Publish/Unpublish button -->
            @if (Model.IsPublished)
            {
                <form asp-action="Unpublish" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Unpublish</button>
                </form>
            }

            
        </div>
    </div>

</div>
