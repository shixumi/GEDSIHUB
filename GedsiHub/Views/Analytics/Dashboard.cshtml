@model GedsiHub.ViewModels.AnalyticsDashboardViewModel

@{
    Layout = "_LayoutApp";
    ViewData["Title"] = "Analytics Dashboard";
}

        
<div class="feedback-title-searcbar-con">
    <h1 id="feedback-responses-title" class="modules_title" style="color: #464040;">@ViewData["Title"]</h1>
    <div class="manage-user-and-gen-rep-con">
        <button id="GenerateReportButton" type="button" onclick="location.href='@Url.Action("Demographic", "Reports")'">
            <img src="~/images/Graph.png" alt="Generate Report" /> Generate Report
        </button>


    </div>

</div>
<hr class="custom-hr">

<div class="dashboard-con-of-con">
    <div class="ad-dashboard-container" style="margin-top: -0.5rem;">
        <div class="container admin-dashboard-item-con">
            <div class="label-and-no-con">
                <span class="ad-mod-text-dashboard">Total Learners</span>
                <h1 class="ad-number">@Model.TotalLearners</h1>
            </div>
            <img src="~/images/Total_Learners.png" alt="Total Learners" />
        </div>
        <div class="container admin-dashboard-item-con">
            <div class="label-and-no-con">
                <span class="ad-mod-text-dashboard">Student Learners</span>
                <h1 class="ad-number">@Model.StudentLearners</h1>
            </div>
            <img src="~/images/Student_Learners.png" alt="Student Learners" />
        </div>
        <div class="container admin-dashboard-item-con">
            <div class="label-and-no-con">
                <span class="ad-mod-text-dashboard">Employee Learners</span>
                <h1 class="ad-number">@Model.EmployeeLearners</h1>
            </div>
            <img src="~/images/Employee_Learners.png" alt="Employee Learners" />
        </div>
        <div class="container admin-dashboard-item-con">
            <div class="label-and-no-con">
                <span class="ad-mod-text-dashboard">Total Modules</span>
                <h1 class="ad-number">@Model.TotalModules</h1>
            </div>
            <img src="~/images/Total_Modules.png" alt="Total Modules" />
        </div>
    </div>
</div>




@* 
<h1>@ViewData["Title"]</h1>

<!-- Summary Metrics -->
<div class="row mb-4">
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-white bg-primary h-100">
            <div class="card-body">
                <h5 class="card-title">Total Learners</h5>
                <p class="card-text" style="font-size: 2em;">@Model.TotalLearners</p>
            </div>
        </div>
    </div>
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-white bg-success h-100">
            <div class="card-body">
                <h5 class="card-title">Student Learners</h5>
                <p class="card-text" style="font-size: 2em;">@Model.StudentLearners</p>
            </div>
        </div>
    </div>
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-white bg-warning h-100">
            <div class="card-body">
                <h5 class="card-title">Employee Learners</h5>
                <p class="card-text" style="font-size: 2em;">@Model.EmployeeLearners</p>
            </div>
        </div>
    </div>
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-white bg-danger h-100">
            <div class="card-body">
                <h5 class="card-title">Total Modules</h5>
                <p class="card-text" style="font-size: 2em;">@Model.TotalModules</p>
            </div>
        </div>
    </div>
</div>
 *@



<hr class="custom-hr" style="margin-top: 1.5rem;">


<div class="all-analytics-container">
    <!-- Row 1: Age Distribution, Gender Identity, Indigenous Membership -->
    <div class="analytics">
        <div id="age-distribution-container" class="container analytics_graph_container age-dist-wide">
            <h6>Age Distribution</h6>
            <canvas id="ageDistributionChart" class="full-width-canvas"></canvas>
            <span class="insight">Insight: Age distribution trends over time.</span>
        </div>
        <div class="container analytics_graph_container gender-identity-narrow">
            <h6>Gender Identity</h6>
            <canvas id="genderIdentityChart"></canvas>
            <span class="insight">Insight: Gender identity breakdown analysis.</span>
        </div>
        <div class="container analytics_graph_container indigenous-membership-narrow">
            <h6>Indigenous Membership</h6>
            <canvas id="indigenousMembershipChart"></canvas>
            <span class="insight">Insight: Indigenous membership data insights.</span>
        </div>
    </div>

    <!-- Row 2: Active Users, Module Performance -->
    <div class="analytics">
        <div class="container analytics_graph_container active-users-container">
            <div class="active-users-label-and-count-con">
                <h4>Current<br>Active Users</h4>
                <span class="activeUsersCount"></span>
            </div>
           
        </div>
        <div class="container analytics_graph_container module-performance-container">
            <h4>Module Performance</h4>
            <div class="form-group">
                <label for="moduleSelector" class="module-label">Select Module:</label>
                <select id="moduleSelector" class="select-module-analytics">
                    @foreach (var module in Model.Modules)
                    {
                        <option value="@module.ModuleId">@module.Title</option>
                    }
                </select>
            </div>
            <div class="module-performance-stats-container">
                <div class="module-performance-stat">
                    <p><strong>Average Quiz Score</strong></p>
                    <p id="averageQuizScore">0</p>
                </div>
                <div class="module-performance-stat">
                    <p><strong>Completion Rate</strong></p>
                    <p id="completionRate">0%</p>
                </div>
                <div class="module-performance-stat">
                    <p><strong>Certificates Issued</strong></p>
                    <p id="certificateIssuance">0</p>
                </div>
            </div>
            <span class="insight">Insight: Key performance metrics per module.</span>
        </div>
    </div>

    <!-- Row 3: Employment Status Breakdown, Course Associations -->
    <div class="analytics">
        <div class="container analytics_graph_container employment-status-container">
            <h6>Employment Status Breakdown</h6>
            <canvas id="employmentStatusChart"></canvas>
            <span class="insight">Insight: Employment status distribution.</span>
        </div>
        <div class="container analytics_graph_container course-associations-container">
            <h6>Course Associations</h6>
            <canvas id="courseAssociationsChart"></canvas>
            <span class="insight">Insight: Course association trends and patterns.</span>
        </div>
    </div>
</div>



<!-- Charts Initialization Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Fetch and render User Demographics
        fetch('/Analytics/GetUserDemographics')
            .then(response => response.json())
            .then(data => {
                // Age Distribution
                const ageLabels = data.ageDistribution.map(a => a.year);
                const ageCounts = data.ageDistribution.map(a => a.count);

                new Chart(document.getElementById('ageDistributionChart'), {
                    type: 'bar',
                    data: {
                        labels: ageLabels,
                        datasets: [{
                            label: 'Number of Users',
                            data: ageCounts,
                            backgroundColor: 'rgb(42, 96, 113, 0.6)'
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            title: {
                                display: false,
                                text: 'Age Distribution'
                            },
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Number of Users'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Year of Birth'
                                }
                            }
                        }
                    }
                });

                // Gender Identity
                const genderLabels = data.genderIdentity.map(g => g.gender);
                const genderCounts = data.genderIdentity.map(g => g.count);

                new Chart(document.getElementById('genderIdentityChart'), {
                    type: 'pie',
                    data: {
                        labels: genderLabels,
                        datasets: [{
                            data: genderCounts,
                            backgroundColor: ['#6b2a1e', '#d8b27b', '#3c6470', '#7b5742', '#5c7786']
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: false,
                                text: 'Gender Identity'
                            }
                        }
                    }
                });

                // Indigenous Membership
                const indigenousLabels = data.indigenousMembership.map(i => i.isMember ? "Indigenous" : "Non-Indigenous");
                const indigenousCounts = data.indigenousMembership.map(i => i.count);

                new Chart(document.getElementById('indigenousMembershipChart'), {
                    type: 'doughnut',
                    data: {
                        labels: indigenousLabels,
                        datasets: [{
                            data: indigenousCounts,
                            backgroundColor: ['#c48c3a', '#3c6470']
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: false,
                                text: 'Indigenous Membership'
                            }
                        }
                    }
                });
            });

        // Module Performance
        document.getElementById('moduleSelector').addEventListener('change', function () {
            const moduleId = this.value;
            fetch(`/Analytics/GetModulePerformance?moduleId=${moduleId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('averageQuizScore').innerText = data.AverageQuizScore.toFixed(2);
                    document.getElementById('completionRate').innerText = data.CompletionRate.toFixed(2);
                    document.getElementById('certificateIssuance').innerText = data.CertificateIssuance;
                });
        });

        // Initial load for module performance
        if (document.getElementById('moduleSelector').options.length > 0) {
            document.getElementById('moduleSelector').dispatchEvent(new Event('change'));
        }

        // Employment Status Breakdown
        fetch('/Analytics/GetEmploymentStatusBreakdown')
            .then(response => response.json())
            .then(data => {
                const labels = data.map(e => e.status);
                const counts = data.map(e => e.count);

                new Chart(document.getElementById('employmentStatusChart'), {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Number of Users',
                            data: counts,
                            backgroundColor: 'rgb(196, 140, 58, 0.6)'
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            title: {
                                display: false,
                                text: 'Employment Status Breakdown'
                            },
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Number of Users'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Employment Status'
                                }
                            }
                        }
                    }
                });
            });

             // Course Associations
        fetch('/Analytics/GetCourseAssociations')
            .then(response => response.json())
            .then(data => {
                // Assuming data contains CourseName and Count
                const labels = data.map(c => c.courseName);
                const counts = data.map(c => c.count);

                new Chart(document.getElementById('courseAssociationsChart'), {
                    type: 'pie',
                    data: {
                        labels: labels,
                        datasets: [{
                            data: counts,
                            backgroundColor: ['#3c6470', '#7b5742', '#96aab8', '#5c7786', '#6b2a1e', '#d8b27b']
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: false,
                                text: 'Course Associations'
                            }
                        }
                    }
                });
            });

        // Current Active Users
        fetch('/Analytics/GetCurrentActiveUsers')
            .then(response => response.json())
            .then(data => {
                document.querySelector('.activeUsersCount').innerText = data.ActiveUsers;
            });
    });
</script>