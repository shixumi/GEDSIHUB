@model GedsiHub.ViewModels.AnalyticsDashboardViewModel

@{
    Layout = "_LayoutApp";
    ViewData["Title"] = "Analytics Dashboard";
}



@{
    ViewData["Title"] = "Dashboard";
}


<div class="feedback-title-searcbar-con">
    <h1 id="feedback-responses-title" class="modules_title" style="color: #464040;">@ViewData["Title"]</h1>
    <div class="manage-user-and-gen-rep-con">
        <button id="GenerateReportButton" type="button">
            <img src="~/images/Graph.png" alt="Generate Report" /> Generate Report
        </button>
    </div>

</div>
<hr>

<div class="dashboard-con-of-con">
    <div class="ad-dashboard-container">
        <div class="container admin-dashboard-item-con">
            <div class="label-and-no-con">
                <span class="ad-mod-text-dashboard">Total Learners</span>
                <h1 class="ad-number">@Model.TotalLearners</h1>
            </div>
            <img src="~/images/Total_Learners.png" alt="Total Learners" />
        </div>
        <div class="container admin-dashboard-item-con">
            <div class="label-and-no-con">
                <span class="ad-mod-text-dashboard">Student Learners</span>
                <h1 class="ad-number">@Model.StudentLearners</h1>
            </div>
            <img src="~/images/Student_Learners.png" alt="Student Learners" />
        </div>
        <div class="container admin-dashboard-item-con">
            <div class="label-and-no-con">
                <span class="ad-mod-text-dashboard">Employee Learners</span>
                <h1 class="ad-number">@Model.EmployeeLearners</h1>
            </div>
            <img src="~/images/Employee_Learners.png" alt="Employee Learners" />
        </div>
        <div class="container admin-dashboard-item-con">
            <div class="label-and-no-con">
                <span class="ad-mod-text-dashboard">Total Modules</span>
                <h1 class="ad-number">@Model.TotalModules</h1>
            </div>
            <img src="~/images/Total_Modules.png" alt="Total Modules" />
        </div>
    </div>
</div>




@* 
<h1>@ViewData["Title"]</h1>

<!-- Summary Metrics -->
<div class="row mb-4">
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-white bg-primary h-100">
            <div class="card-body">
                <h5 class="card-title">Total Learners</h5>
                <p class="card-text" style="font-size: 2em;">@Model.TotalLearners</p>
            </div>
        </div>
    </div>
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-white bg-success h-100">
            <div class="card-body">
                <h5 class="card-title">Student Learners</h5>
                <p class="card-text" style="font-size: 2em;">@Model.StudentLearners</p>
            </div>
        </div>
    </div>
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-white bg-warning h-100">
            <div class="card-body">
                <h5 class="card-title">Employee Learners</h5>
                <p class="card-text" style="font-size: 2em;">@Model.EmployeeLearners</p>
            </div>
        </div>
    </div>
    <div class="col-md-3 col-sm-6 mb-3">
        <div class="card text-white bg-danger h-100">
            <div class="card-body">
                <h5 class="card-title">Total Modules</h5>
                <p class="card-text" style="font-size: 2em;">@Model.TotalModules</p>
            </div>
        </div>
    </div>
</div>
 *@


<h4 style="padding:1.5rem 0 0 0; color: #464040;">User Demographics</h4>
<div class="all-analytics-container">
    <div class="ad-dashboard-container">
        <!-- Age Distribution Container -->
        <div class="col-1-age-dist-container">
            <div id="age-distribution-container" class="container analytics_graph_container">
                <h6>Age Distribution</h6>
                <canvas id="ageDistributionChart" class="full-width-canvas"></canvas>
            </div>



            <!-- Module Performance and Active Users Container -->
            <div class="mod-perf-active-users-container">

                <div id="active-users-container" class="container analytics_graph_container">
                    <!-- Current Active Users -->
                    <div class="active-users-label-and-count-con">
                        <h4>Current<br>Active Users</h4>
                        <span class="activeUsersCount">0</span>
                    </div>
                </div>
                
                <!-- Module Performance -->
                <div id="mod-perf-container" class="container analytics_graph_container module-performance-container">
                    <h2>Module Performance</h2>
                    <div class="form-group">
                        <label for="moduleSelector" class="module-label">Select Module</label>
                        <select id="moduleSelector" class="form-control select">
                            @foreach (var module in Model.Modules)
                            {
                                <option value="@module.ModuleId">@module.Title</option>
                            }
                        </select>
                    </div>

                    <!-- Horizontal Stat Container -->
                    <div class="module-performance-stats-container">
                        <div class="module-performance-stat">
                            <p><strong>Average Quiz Score</strong></p>
                            <p id="averageQuizScore">0</p>
                        </div>
                        <div class="module-performance-stat">
                            <p><strong>Completion Rate</strong></p>
                            <p id="completionRate">0%</p>
                        </div>
                        <div class="module-performance-stat">
                            <p><strong>Certificates Issued</strong></p>
                            <p id="certificateIssuance">0</p>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <!-- User Demographics Container -->
        <div class="col-2-of-user-demo">
            <div class="container analytics_graph_container">
                <h6>Gender Identity</h6>
                <canvas id="genderIdentityChart"></canvas>
            </div>
            <div class="container analytics_graph_container">
                <h6>Indigenous Membership</h6>
                <canvas id="indigenousMembershipChart"></canvas>
            </div>
        </div>
    </div>




    <div class="ad-dashboard-container">
        <div class="col-1-feedback-satistfaction-container">
            <div class="container analytics_graph_container feedback-emp-course-satisfaction">
                <!-- Employment Status Breakdown -->
                <h2>Employment Status Breakdown</h2>
                <canvas id="employmentStatusChart"></canvas>
            </div>
            <div class="container analytics_graph_container feedback-emp-course-satisfaction">
                <!-- User Satisfaction Levels -->
                <h2>User Satisfaction Levels</h2>
                <canvas id="userSatisfactionChart"></canvas>
            </div>
        </div>
        <div class="col-2-emp-course-container">
            <div class="container analytics_graph_container feedback-emp-course-satisfaction">
                <!-- User Feedback Analysis -->
                <h2>User Feedback Analysis</h2>
                <canvas id="feedbackAnalysisChart"></canvas>
            </div>
            <div class="container analytics_graph_container feedback-emp-course-satisfaction smaller-course-association">
                <!-- Course Associations -->
                <h2>Course Associations</h2>
                <canvas id="courseAssociationsChart"></canvas>

            </div>


            
        </div>
    </div>

</div>



</div>





@* <!-- Container for All Charts -->
<div style="display: flex; flex-direction: column; gap: 40px;">
    <!-- Existing Analytics Charts -->
    <!-- ... your existing charts like User Demographics, Module Performance, etc. ... -->

    <!-- Example: User Demographics -->
    <div>
        <h2>User Demographics</h2>
        <div style="display: flex; flex-wrap: wrap; gap: 20px;">
            <div style="flex: 1 1 300px;">
                <h3>Age Distribution</h3>
                <canvas id="ageDistributionChart"></canvas>
            </div>
            <div style="flex: 1 1 300px;">
                <h3>Gender Identity</h3>
                <canvas id="genderIdentityChart"></canvas>
            </div>
            <div style="flex: 1 1 300px;">
                <h3>Indigenous Membership</h3>
                <canvas id="indigenousMembershipChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Module Performance -->
    <div>
        <h2>Module Performance</h2>
        <div style="margin-bottom: 20px;">
            <label for="moduleSelector">Select Module:</label>
            <select id="moduleSelector">
                @foreach (var module in Model.Modules)
                {
                    <option value="@module.ModuleId">@module.Title</option>
                }
            </select>
        </div>
        <div>
            <p><strong>Average Quiz Score:</strong> <span id="averageQuizScore">0</span></p>
            <p><strong>Completion Rate:</strong> <span id="completionRate">0</span>%</p>
            <p><strong>Certificates Issued:</strong> <span id="certificateIssuance">0</span></p>
        </div>
    </div>

    <!-- Current Active Users -->
    <div>
        <h2>Current Active Users</h2>
        <p><strong>Active Users:</strong> <span class="activeUsersCount">0</span></p>
    </div> *@


    <!-- Employment Status Breakdown -->
    <div>
        <h2>Employment Status Breakdown</h2>
        <canvas id="employmentStatusChart"></canvas>
    </div>

    <!-- Course Associations -->
    <div>
        <h2>Course Associations</h2>
        <canvas id="courseAssociationsChart"></canvas>
    </div>

</div>

<!-- Charts Initialization Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Fetch and render User Demographics
        fetch('/Analytics/GetUserDemographics')
            .then(response => response.json())
            .then(data => {
                // Age Distribution
                const ageLabels = data.ageDistribution.map(a => a.year);
                const ageCounts = data.ageDistribution.map(a => a.count);

                new Chart(document.getElementById('ageDistributionChart'), {
                    type: 'bar',
                    data: {
                        labels: ageLabels,
                        datasets: [{
                            label: 'Number of Users',
                            data: ageCounts,
                            backgroundColor: 'rgba(75, 192, 192, 0.6)'
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            title: {
                                display: false,
                                text: 'Age Distribution'
                            },
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Number of Users'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Year of Birth'
                                }
                            }
                        }
                    }
                });

                // Gender Identity
                const genderLabels = data.genderIdentity.map(g => g.gender);
                const genderCounts = data.genderIdentity.map(g => g.count);

                new Chart(document.getElementById('genderIdentityChart'), {
                    type: 'pie',
                    data: {
                        labels: genderLabels,
                        datasets: [{
                            data: genderCounts,
                            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: false,
                                text: 'Gender Identity'
                            }
                        }
                    }
                });

                // Indigenous Membership
                const indigenousLabels = data.indigenousMembership.map(i => i.isMember ? "Indigenous" : "Non-Indigenous");
                const indigenousCounts = data.indigenousMembership.map(i => i.count);

                new Chart(document.getElementById('indigenousMembershipChart'), {
                    type: 'doughnut',
                    data: {
                        labels: indigenousLabels,
                        datasets: [{
                            data: indigenousCounts,
                            backgroundColor: ['#4CAF50', '#FFC107']
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: false,
                                text: 'Indigenous Membership'
                            }
                        }
                    }
                });
            });

        // Module Performance
        document.getElementById('moduleSelector').addEventListener('change', function () {
            const moduleId = this.value;
            fetch(`/Analytics/GetModulePerformance?moduleId=${moduleId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('averageQuizScore').innerText = data.AverageQuizScore.toFixed(2);
                    document.getElementById('completionRate').innerText = data.CompletionRate.toFixed(2);
                    document.getElementById('certificateIssuance').innerText = data.CertificateIssuance;
                });
        });

        // Initial load for module performance
        if (document.getElementById('moduleSelector').options.length > 0) {
            document.getElementById('moduleSelector').dispatchEvent(new Event('change'));
        }

        // Employment Status Breakdown
        fetch('/Analytics/GetEmploymentStatusBreakdown')
            .then(response => response.json())
            .then(data => {
                const labels = data.map(e => e.status);
                const counts = data.map(e => e.count);

                new Chart(document.getElementById('employmentStatusChart'), {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Number of Users',
                            data: counts,
                            backgroundColor: 'rgba(153, 102, 255, 0.6)'
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            title: {
                                display: false,
                                text: 'Employment Status Breakdown'
                            },
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Number of Users'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Employment Status'
                                }
                            }
                        }
                    }
                });
            });

        // Course Associations
        fetch('/Analytics/GetCourseAssociations')
            .then(response => response.json())
            .then(data => {
                // Assuming data contains CourseName and Count
                const labels = data.map(c => c.courseName);
                const counts = data.map(c => c.count);

                new Chart(document.getElementById('courseAssociationsChart'), {
                    type: 'pie',
                    data: {
                        labels: labels,
                        datasets: [{
                            data: counts,
                            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: false,
                                text: 'Course Associations'
                            }
                        }
                    }
                });
            });


        // Current Active Users
        fetch('/Analytics/GetCurrentActiveUsers')
            .then(response => response.json())
            .then(data => {
                document.querySelector('.activeUsersCount').innerText = data.ActiveUsers;
            });
    });
</script>