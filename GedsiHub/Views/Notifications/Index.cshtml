@model IEnumerable<GedsiHub.Models.NotificationUser>
@{
    ViewData["Title"] = "Notifications";
    Layout = "_LayoutApp";
}

<!-- Embedded CSS -->
<style>
#notification-container {
    overflow-y: auto;
}

.notif-toggle-con {
    display: inline-flex;
    border-radius: 20px;
    background: none;
    
}

.toggle-option {
    width: 8rem;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-family: Arial, sans-serif;
    color: #333;
    transition: color 0.3s;
    font-size: 1.2rem;
    font-family: 'Poppins';
    font-weight: 500;
    margin-right: 0.8rem;
}

    .toggle-option.selected {
        background-color: #660000;
        color: #fff;
        border-radius: 20px;
    }

    .toggle-option:not(.selected):hover {
        background-color: #f0f0f0;
        border-radius: 20px;
    }

    .toggle-option.selected {
        background-color: #660000;
        color: #fff;
        border-radius: 20px;
    }

/* Style the table and ensure it takes up full width */

.important-notif-table table, .less-important-notif-table table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 1rem;
    color: #464040;
}

/* Table header styling */

.important-text {
    margin-top: 2rem;
    text-align: left;
    font-weight: 500;
    font-size: 1.5rem;
    color: #464040;
}

/* First cell (icon) styling */

.important-notif-table td, .less-important-notif-table td, .less-important-notif-table tr, .important-notif-table tr {
    padding-bottom: 1.3rem;
    background-color: white;
}

    .important-notif-table td:first-child, .less-important-notif-table td:first-child {
        align-items: center;
        justify-content: center;
        display: flex;
        padding-right: 1rem;
    }

    /* Notification message styling */

    .important-notif-table td:nth-child(2), .less-important-notif-table td:nth-child(2) {
        width: 100%;
        padding-right: 3rem;
    }

    /* Time cell styling */

    .important-notif-table td:last-child, .less-important-notif-table td:last-child {
        text-align: right;
        white-space: nowrap;
        color: #9c9c9c;
        vertical-align: top;
        padding: 0;
    }

/* Circle styling */

.notif-circle {
    width: 3rem;
    height: 3rem;
    background-color: #FF6663;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}

    .notif-circle img {
        width: 2rem;
        height: auto;
        margin-top: -0.2rem;
    }

</style>

<div>
    <div class="feedback-title-searcbar-con">
        <h1 id="feedback-responses-title" class="modules_title" style="color: #464040;">Notifications</h1>
    </div>
    <hr>
    <div id="notification-container" class="container feedback-container">



        <div class="notif-toggle-con">
            <div class="toggle-option selected" data-filter="all">All</div>
            <div class="toggle-option" data-filter="unread">Unread</div>
        </div>


     



        <h1 class="important-text">Important</h1>
        <div>
            <div class="important-notif-table">
                <table>
                    <tbody>
                        @foreach (var notificationUser in Model.Where(nu => nu.Notification.IsImportant))
                        {
                            var notification = notificationUser.Notification;
                            <tr class="notification-item @(notificationUser.IsRead ? "read" : "unread")" data-id="@notification.Id">
                                <td>
                                    <div class="notif-circle">
                                        <i class="@notification.IconClass"></i>
                                    </div>
                                </td>
                                <td>
                                    <strong>@notification.Title</strong><br />
                                    <span>@(notification.Message.Length > 100 ? notification.Message.Substring(0, 100) + "..." : notification.Message)</span>
                                </td>
                                <td class="timestamp">@notification.CreatedAt.ToString("g")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <h1 class="important-text">Less Important</h1>
        <div>
            <div class="less-important-notif-table">
                <table>
                    <tbody>
                        @foreach (var notificationUser in Model.Where(nu => !nu.Notification.IsImportant))
                        {
                            var notification = notificationUser.Notification;
                            <tr class="notification-item @(notificationUser.IsRead ? "read" : "unread")" data-id="@notification.Id">
                                <td>
                                    <div class="notif-circle">
                                        <i class="@notification.IconClass"></i>
                                    </div>
                                </td>
                                <td>
                                    <strong>@notification.Title</strong><br />
                                    <span>@(notification.Message.Length > 100 ? notification.Message.Substring(0, 100) + "..." : notification.Message)</span>
                                </td>
                                <td class="timestamp">@notification.CreatedAt.ToString("g")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="create-notif-button-con">
        @if (User.IsInRole("Admin"))
        {
            <a asp-controller="Notifications" asp-action="AdminCreate" class="create-notification-button">
                Create Notification
            </a>
        }
    </div>
</div>

@section Scripts {
    <!-- Include jQuery and SignalR scripts if not already included -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- SignalR script -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>
    <script>
        $(document).ready(function () {
            // SignalR setup
            var connection = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();

            connection.on("ReceiveNotification", function () {
                // Optionally refresh the notifications list
                location.reload();
            });

            connection.start().then(function () {
                console.log('SignalR connected');
            }).catch(function (err) {
                return console.error(err.toString());
            });

            // Toggle between All and Unread notifications
            $(document).on('click', '.toggle-option', function () {
                $('.toggle-option').removeClass('selected');
                $(this).addClass('selected');
                var filter = $(this).data('filter');
                if (filter === 'unread') {
                    $('.notification-item.read').hide();
                    $('.notification-item.unread').show();
                } else {
                    $('.notification-item').show();
                }
            });

            // Navigate to notification details when clicked
            $(document).on('click', '.notification-item', function () {
                var notificationId = $(this).data('id');
                window.location.href = '/Notifications/Details/' + notificationId;
            });
        });
    </script>
}
