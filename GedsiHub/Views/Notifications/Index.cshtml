@model IEnumerable<GedsiHub.Models.NotificationUser>
@{
    ViewData["Title"] = "Notifications";
    Layout = "_LayoutApp";
}


<div>
    <div class="feedback-title-searcbar-con">
        <h1 id="feedback-responses-title" class="modules_title" style="color: #464040;">Notifications</h1>
        <div class="manage-user-and-gen-rep-con">
            
            @if (User.IsInRole("Admin"))
            {
                <a asp-controller="Notifications" asp-action="AdminCreate" class="admin-create-notification-button">
                    <img id="addModuleTopAddIcon" src="/images/Add_White.png">
                     Create Notification
                </a>
            }
        </div>
    </div>

    <hr class="custom-hr">
    <div id="notification-container" class="container feedback-container">



        <div class="notif-toggle-con">
            <div class="toggle-option selected" data-filter="all">All</div>
            <div class="toggle-option" data-filter="unread">Unread</div>
        </div>


     



        <h1 class="important-text">Important</h1>
        <div>
            <div class="important-notif-table">
                <table>
                    <tbody>
                        @foreach (var notificationUser in Model.Where(nu => nu.Notification.IsImportant))
                        {
                            var notification = notificationUser.Notification;
                            <tr class="notification-item @(notificationUser.IsRead ? "read" : "unread")" data-id="@notification.Id">
                                <td>
                                    <div class="notif-circle @notification.Category">
                                        <i class="@notification.IconClass"></i>
                                    </div>
                                </td>
                                <td>
                                    <span class="notif-title">@notification.Title</span><br />
                                    <span class="notif-msg">@(notification.Message.Length > 100 ? notification.Message.Substring(0, 100) + "..." : notification.Message)</span>
                                </td>
                                <td class="timestamp">@notification.CreatedAt.ToString("g")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <h1 class="important-text">Less Important</h1>
        <div>
            <div class="less-important-notif-table">
                <table>
                    <tbody>
                        @foreach (var notificationUser in Model.Where(nu => !nu.Notification.IsImportant))
                        {
                            var notification = notificationUser.Notification;
                            <tr class="notification-item @(notificationUser.IsRead ? "read" : "unread")" data-id="@notification.Id">
                                <td>
                                    <div class="notif-circle @notification.Category">
                                        <i class="@notification.IconClass"></i>
                                    </div>
                                </td>
                                <td>
                                    <span class="notif-title">@notification.Title</span><br />
                                    <span class="notif-msg">@(notification.Message.Length > 100 ? notification.Message.Substring(0, 100) + "..." : notification.Message)</span>
                                </td>
                                <td class="timestamp">@notification.CreatedAt.ToString("g")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
</div>

@section Scripts {
    <!-- Include jQuery and SignalR scripts if not already included -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- SignalR script -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>
    <script>
        $(document).ready(function () {
            // SignalR setup
            var connection = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();

            connection.on("ReceiveNotification", function () {
                // Optionally refresh the notifications list
                location.reload();
            });

            connection.start().then(function () {
                console.log('SignalR connected');
            }).catch(function (err) {
                return console.error(err.toString());
            });

            // Toggle between All and Unread notifications
            $(document).on('click', '.toggle-option', function () {
                $('.toggle-option').removeClass('selected');
                $(this).addClass('selected');
                var filter = $(this).data('filter');
                if (filter === 'unread') {
                    $('.notification-item.read').hide();
                    $('.notification-item.unread').show();
                } else {
                    $('.notification-item').show();
                }
            });

            // Navigate to notification details when clicked
            $(document).on('click', '.notification-item', function () {
                var notificationId = $(this).data('id');
                window.location.href = '/Notifications/Details/' + notificationId;
            });
        });
    </script>
}

