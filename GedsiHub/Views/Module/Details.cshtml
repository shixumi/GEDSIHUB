@model GedsiHub.Models.Module
@{
    Layout = "_LayoutApp";
    ViewData["Title"] = "Module Details";
}

<!-- Module Details -->
<div class="container-lesson">
    <!-- Breadcrumb -->
    <div class="breadcrumb-and-button">
        <!-- Link to the Modules overview -->
        <ol class="breadcrumb" id="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-action="Index">
                    <span id="modules_breadcrumb">Modules</span>
                </a>
            </li>
            <!-- Show the current module name (or title) -->
            <li class="breadcrumb-item active">
                <span id="modules_lessons_breadcrumb">@Model.Title</span>
            </li>
        </ol>

        <!-- Create Assessment Button -->
        @if (User.IsInRole("Admin") && Model.Assessment == null)
        {
            <a asp-controller="Assessment" asp-action="Create" asp-route-moduleId="@Model.ModuleId" class="create_assessment_button btn btn-primary">
                Create Assessment
            </a>
        }
    </div>

    <!-- Module Title -->
    <span id="added_module_title" class="added_module_title">@Model.Title</span>

    <!-- Module Description -->
    <div class="module-desc-text">
        <strong>Description:&nbsp;</strong>@Model.Description
    </div>

    <!-- If no lessons, display this create new lesson container -->
    @if (!Model.Lessons.Any())
    {
        <div id="create_new_lesson_container" class="container d-xxl-flex AddLessonContainer">
            <div id="add_new_lesson_container" class="d-xxl-flex justify-content-xxl-center align-items-xxl-center add_new_lesson_container">
                <span class="no_lessons_added_text">No lessons have been added yet</span>
                <a asp-action="Create" asp-controller="Lesson" asp-route-moduleId="@Model.ModuleId" class="btn create_lesson_button">
                    <img id="add_icon_create_lesson" src="/images/Add_White.png" /> Create Lesson
                </a>
            </div>
        </div>
    }

    <!-- Iterate through each lesson and display lesson details -->
    @foreach (var lesson in Model.Lessons)
    {
        <div id="edit_new_lesson_container" class="container d-xxl-flex EditLessonContainer">
            <div class="lessonNo_title_container">
                <span>Lesson</span>
                <span id="LessonNumberDisplay">@lesson.LessonNumber.</span>
                <span id="LessonTitleDisplay">@lesson.Title</span>
                <div class="lesson_con_linebreak"></div>
            </div>
            <span id="LessonOverviewDisplay" class="lesson_brief_overview">
                @lesson.Overview.Substring(0, Math.Min(250, lesson.Overview.Length))
                @if (lesson.Overview.Length > 250)
                {
                    <text>...</text>
                }
            </span>
            <div class="button_container">
                <!-- Delete Lesson Button -->
                <a class="lesson-ftr-btn" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal-@lesson.LessonId">
                    <div id="DeleteLesson">
                        <img class="Delete" src="~/images/Delete.png" />
                        <span>Delete</span>
                    </div>
                </a>

                <!-- Edit Lesson Button -->
                <a asp-action="Edit" asp-controller="Lesson" asp-route-id="@lesson.LessonId" class="lesson-ftr-btn">
                    <div id="EditLesson">
                        <img class="Edit" src="~/images/Edit.png" alt="Edit Icon" />
                        <span>Edit</span>
                    </div>
                </a>

                <!-- Toggle button for publish/unpublish lesson -->
                <form asp-action="TogglePublish" asp-controller="Lesson" asp-route-id="@lesson.LessonId" method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="lesson-ftr-btn">
                        <div id="toggleButtonPublishUnpublishLesson">
                            @if (lesson.IsPublished)
                            {
                                <img class="PublishIcon" src="~/images/Unpublish.png" alt="Unpublish Icon" />
                                <span>Unpublish</span>
                            }
                            else
                            {
                                <img class="PublishIcon" src="~/images/Publish.png" alt="Publish Icon" />
                                <span>Publish</span>
                            }
                        </div>
                    </button>
                </form>

                <!-- Go to lesson button -->
                <a asp-action="Create" asp-controller="LessonContent" asp-route-lessonId="@lesson.LessonId" asp-route-moduleId="@Model.ModuleId" class="btn btn-primary go_to_button">
                    Go To Lesson
                </a>
            </div>
        </div>
    }

    <!-- If there are lessons in the module, display add new lesson button -->
    @if (Model.Lessons.Any())
    {
        <a asp-action="Create" asp-controller="Lesson" asp-route-moduleId="@Model.ModuleId">
            <div id="addNewLesson" class="container d-xxl-flex addNewLesson">
                <div>
                    <img class="add_icon_lesson" src="~/images/Add.png" />
                    <span style="font-size: 1.05875rem;">Add New Lesson</span>
                </div>
            </div>
        </a>
    }

    <!-- Assessment Section -->
    <div class="assessment-section" style="margin-top: 5rem">
        <span id="added_module_title" class="added_module_title">Assessment</span>

        @if (Model.Assessment == null)
        {
            <div class="module-desc-text">
                No assessment has been added for this module.
            </div>
        }
        else
        {
            <div class="assessment-details mb-5">
                <h3>@Model.Assessment.Title</h3>
                <p>@Model.Assessment.Description</p>
                <!-- H5P Embed -->
                <div class="responsive-iframe">
                    @Html.Raw(Model.Assessment.H5PEmbedCode)
                </div>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-controller="Assessment" asp-action="Edit" asp-route-id="@Model.Assessment.AssessmentId" class="btn btn-warning mt-3">Edit Assessment</a>
                    <a asp-controller="Assessment" asp-action="Delete" asp-route-id="@Model.Assessment.AssessmentId" class="btn btn-danger mt-3">Delete Assessment</a>
                }
            </div>
        }
    </div>
</div>

<!-- Delete lesson modal for each lesson -->
@foreach (var lesson in Model.Lessons)
{
    <div class="modal fade" id="confirmDeleteModal-@lesson.LessonId" tabindex="-1" aria-labelledby="confirmDeleteModalLabel-@lesson.LessonId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmDeleteModalLabel-@lesson.LessonId">Delete Lesson?</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete the lesson titled "<strong>@lesson.Title</strong>"?
                </div>
                <div class="modal-footer">
                    <form asp-action="Delete" asp-controller="Lesson" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@lesson.LessonId" />
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<!-- Module Time Spent Analytics -->
<script>
    let moduleStartTime;

    window.onload = function() {
        moduleStartTime = new Date();
    };

    window.onbeforeunload = function() {
        let moduleEndTime = new Date();
        let timeSpent = (moduleEndTime - moduleStartTime) / 1000; // Time in seconds

        // Send the timeSpent to the server via fetch
        navigator.sendBeacon('/Analytics/TrackModuleTime', JSON.stringify({
            ModuleId: @Model.ModuleId,
            TimeSpent: timeSpent
        }));
    };
</script>
// In your Razor Page or Layout
<script>
    let moduleStartTime;

    window.onload = function () {
        moduleStartTime = new Date();
    };

    window.onbeforeunload = function () {
        let moduleEndTime = new Date();
        let timeSpent = (moduleEndTime - moduleStartTime) / 1000; // Time in seconds

        // Send the timeSpent to the server via fetch
        navigator.sendBeacon('/Analytics/TrackModuleTime', JSON.stringify({
            ModuleId: @Model.ModuleId,
            TimeSpent: timeSpent
        }));
    };
</script>
