@model GedsiHub.Models.Module
@{
    Layout = "_LayoutApp";
    ViewData["Title"] = "Module Details";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<!-- Module Details -->
<div class="container-lesson">
    <!-- Breadcrumb -->
    <div class="breadcrumb-and-button">
        <!-- Link to the Modules overview -->
        <ol class="breadcrumb" id="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-action="Index">
                    <span id="modules_breadcrumb">Modules</span>
                </a>
            </li>
            <!-- Show the current module name (or title) -->
            <li class="breadcrumb-item active">
                <span id="modules_lessons_breadcrumb" title="@Model.Title">
                    @{
                        const int maxLength = 20; // Define maximum length for the breadcrumb
                        var truncatedTitle = Model.Title.Length > maxLength
                        ? Model.Title.Substring(0, maxLength) + "..."
                        : Model.Title;
                    }
                    @truncatedTitle
                </span>
            </li>
        </ol>

        <!-- Validation Summary for displaying error messages -->
        <div asp-validation-summary="All" class="text-danger"></div>

        <!-- Create Assessment Button -->
        @if (User.IsInRole("Admin") && Model.Exam == null)
        {
            <a asp-controller="Assessment" asp-action="CreateOrEdit" asp-route-moduleId="@Model.ModuleId" class="create_assessment_button">
                Create Assessment
            </a>
        }
    </div>

    <!-- Module Title -->
    <span id="added_module_title" class="added_module_title">@Model.Title</span>

    <!-- Module Description -->
    <div class="module-desc-text">
        <strong>Description:&nbsp;</strong>@Model.Description
    </div>

    <!-- If no lessons, display this create new lesson container -->
    @if (!Model.Lessons.Any())
    {
        <div id="create_new_lesson_container" class="container d-xxl-flex AddLessonContainer">
            <div id="add_new_lesson_container" class="d-xxl-flex justify-content-xxl-center align-items-xxl-center add_new_lesson_container">
                <span class="no_lessons_added_text">No lessons have been added yet</span>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-action="Create" asp-controller="Lesson" asp-route-moduleId="@Model.ModuleId" class="btn create_lesson_button">
                        <img id="add_icon_create_lesson" src="/images/Add_White.png" /> Create Lesson
                    </a>
                }
                
            </div>
        </div>
    }

    @{
        var lessonStatuses = ViewData["LessonStatuses"] as Dictionary<int, bool> ?? new Dictionary<int, bool>();
    }

    <!-- Iterate through each lesson and display lesson details -->
    @foreach (var lesson in Model.Lessons.OrderBy(l => l.PositionInt))
    {
        <div id="edit_new_lesson_container" class="container d-xxl-flex EditLessonContainer">
            <div class="lessonNo_title_container">
                <span>Lesson</span>
                <span id="LessonNumberDisplay">@lesson.LessonNumber.</span>
                <span id="LessonTitleDisplay">@lesson.Title</span>
                <div class="lesson_con_linebreak"></div>
            </div>
            <span id="LessonOverviewDisplay" class="lesson_brief_overview">
                @lesson.Overview.Substring(0, Math.Min(250, lesson.Overview.Length))
                @if (lesson.Overview.Length > 250)
                {
                    <text>...</text>
                }
            </span>
            <div class="button_container @(User.IsInRole("Admin") ? "" : "justify-content-end")">
                @if (User.IsInRole("Admin"))
                {
                    <!-- Admin-Specific Buttons -->
                    <!-- Delete Lesson Button -->
                    <a class="lesson-ftr-btn" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal-@lesson.LessonId">
                        <div id="DeleteLesson">
                            <img class="Delete" src="~/images/Delete.png" />
                            <span>Delete</span>
                        </div>
                    </a>

                    <!-- Edit Lesson Button -->
                    <a asp-action="Edit" asp-controller="Lesson" asp-route-id="@lesson.LessonId" class="lesson-ftr-btn">
                        <div id="EditLesson">
                            <img class="Edit" src="~/images/Edit.png" alt="Edit Icon" />
                            <span>Edit</span>
                        </div>
                    </a>

                    <!-- Direct Admin Access to Lesson -->
                    <a asp-action="GoToLesson" asp-controller="LessonContent" asp-route-lessonId="@lesson.LessonId" asp-route-moduleId="@Model.ModuleId" class="btn btn-primary go_to_button">
                        Go To Lesson
                    </a>
                }
                else
                {
                    <!-- User Buttons with Lesson Lock Logic -->
                    @if (lessonStatuses.ContainsKey(lesson.LessonId) && lessonStatuses[lesson.LessonId])
                    {
                        <!-- Lesson is accessible -->
                        <a asp-action="GoToLesson" asp-controller="LessonContent" asp-route-lessonId="@lesson.LessonId" asp-route-moduleId="@Model.ModuleId" class="btn btn-primary go_to_button">
                            Go To Lesson
                        </a>
                    }
                    else
                    {
                        <!-- Lesson is locked -->
                        <span data-bs-toggle="tooltip" data-bs-placement="top" title="Complete the previous lesson to unlock this one.">
                            <button class="btn btn-primary go_to_button" disabled>
                                Locked
                            </button>
                        </span>
                    }
                }
            </div>
        </div>
    }


    <!-- If there are lessons in the module, display add new lesson button -->
    @if (User.IsInRole("Admin"))
    {
        @if (Model.Lessons.Any())
        {
            <a asp-action="Create" asp-controller="Lesson" asp-route-moduleId="@Model.ModuleId">
                <div id="addNewLesson" class="container d-xxl-flex addNewLesson">
                    <div>
                        <img class="add_icon_lesson" src="~/images/Add.png" />
                        <span style="font-size: 1.05875rem;">Add New Lesson</span>
                    </div>
                </div>
            </a>
        }
    }

    <!-- Assessment Section -->
    <div class="assessment-section" style="margin-top: 5rem">
        <span id="added_assessment_title" class="added_assessment_title">Assessment</span>

        @if (Model.Exam == null)
        {
            <div class="module-desc-text">
                No assessment has been added for this module.
            </div>

            @if (User.IsInRole("Admin"))
            {
                <a asp-controller="Assessment" asp-action="CreateOrEdit" asp-route-moduleId="@Model.ModuleId">
                    <div id="addNewLesson" class="container d-xxl-flex addNewLesson">
                        <div>
                            <img class="add_icon_lesson" src="~/images/Add.png" />
                            <span style="font-size: 1.05875rem;">Create Assessment</span>
                        </div>
                    </div>
                </a>
            }
        }
        else
        {
            <div id="edit_assessment_container" class="container d-xxl-flex EditLessonContainer">
                <div class="lessonNo_title_container">
                    <span id="AssessmentTitleDisplay">@Model.Exam?.Name</span>
                    <div class="lesson_con_linebreak"></div>
                </div>
                <div class="button_container @(User.IsInRole("Admin") ? "" : "justify-content-end")">
                    @if (User.IsInRole("Admin"))
                    {
                        <span class="d-flex gap-5">
                            <!-- Admin Buttons -->
                            <div id="DeleteAssessment">
                                <a data-bs-toggle="modal" data-bs-target="#assessmentConfirmDeleteModal-@Model.Exam.ExamID">
                                    <img id="DeleteAssessment" class="Delete" src="~/images/Delete.png" />
                                    <span>Delete</span>
                                </a>
                            </div>

                            <a asp-controller="Assessment" asp-action="CreateOrEdit" asp-route-moduleId="@Model.ModuleId" asp-route-examId="@Model.Exam.ExamID">
                                <div id="EditAssessment">
                                    <img class="Edit" src="~/images/Edit.png" />
                                    <span>Edit</span>
                                </div>
                            </a>
                        </span>
                    }
                    <!-- Go To Assessment Button -->
                    @if (ViewData["AreAllLessonsCompleted"] is bool areAllLessonsCompleted && areAllLessonsCompleted)
                    {
                        <a asp-controller="Assessment" asp-action="Take" asp-route-id="@Model.Exam?.ExamID" class="btn btn-primary go_to_button">
                            Go To Assessment
                        </a>
                    }
                    else
                    {
                        <span data-bs-toggle="tooltip" data-bs-placement="top" title="Complete all lessons before taking the assessment.">
                            <button class="btn btn-primary go_to_button" disabled>
                                Go To Assessment
                            </button>
                        </span>
                    }
                </div>
            </div>
        }
    </div>

    <!-- Delete Assessment Modal -->
    <div class="modal fade" id="assessmentConfirmDeleteModal-@Model.Exam?.ExamID" tabindex="-1"
         aria-labelledby="assessmentConfirmDeleteModalLabel-@Model.Exam?.ExamID" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="assessmentConfirmDeleteModalLabel-@Model.Exam?.ExamID">Delete Assessment?</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete the assessment titled "<strong>@Model.Exam?.Name</strong>"?
                </div>
                <div class="modal-footer">
                    <form asp-action="Delete" asp-controller="Assessment" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Exam?.ExamID" />
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

<!-- Delete lesson modal for each lesson -->
@foreach (var lesson in Model.Lessons)
{
    <div class="modal fade" id="confirmDeleteModal-@lesson.LessonId" tabindex="-1" aria-labelledby="confirmDeleteModalLabel-@lesson.LessonId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmDeleteModalLabel-@lesson.LessonId">Delete Lesson?</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete the lesson titled "<strong>@lesson.Title</strong>"?
                </div>
                <div class="modal-footer">
                    <form asp-action="Delete" asp-controller="Lesson" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@lesson.LessonId" />
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <!-- Module Time Spent Analytics -->
    <script>
        let moduleStartTime;

        window.onload = function () {
            moduleStartTime = new Date();
        };

        window.onbeforeunload = function () {
            let moduleEndTime = new Date();
            let timeSpent = (moduleEndTime - moduleStartTime) / 1000; // Time in seconds

            // Send the timeSpent to the server via fetch
            navigator.sendBeacon('/Analytics/TrackModuleTime', JSON.stringify({
                ModuleId: @Model.ModuleId,
                TimeSpent: timeSpent
            }));
        };
    </script>

    @*<script src="~/js/PublishUnpublishAssessmenttoggle.js"></script>*@

}

</div>