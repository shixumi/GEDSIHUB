@model IEnumerable<GedsiHub.ViewModels.ModuleProgressViewModel>

@{
    Layout = "_LayoutApp";
    ViewData["Title"] = "Module";
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-warning">
        @TempData["Error"]
    </div>
}

<!-- List of Modules Page -->
<div>
    <!-- Module Page Header -->
    <div id="ModulesHeader" class="d-flex justify-content-between align-items-center">
        <h1 class="modules_title" style="color: #464040;">Modules</h1>

        <div class="modules-actions-con">

            <!-- Search Input for Modules -->
            <div id="modules-search-con" class="um-search-con">
                <input id="moduleSearch" type="search" name="search" placeholder="Search for modules" />
                <button type="submit" class="search-icon-um">
                    <img id="modulesSearchButton" src="~/images/Search_Small.png" width="20" height="29" alt="Search" />
                </button>
            </div>
            @*
            <!-- Create Module Button (Visible to Admins only) -->
            @if (User.IsInRole("Admin"))
            {
            <a asp-action="Create" class="btn btn-primary d-xxl-flex addModuleTopButton" id="addModuleTopButton">
            <img id="addModuleTopAddIcon" src="~/images/Add_White.png" /> Add New Module
            </a>
            }
            *@

            <!-- Create Module Button (Visible to Admins only) -->
            @if (User.IsInRole("Admin"))
            {
                <div class="addModule-dropdown">
                    <button data-bs-placement="bottom" data-bs-title="Click to add new module" class="btn btn-primary d-xxl-flex addModuleTopButton dropdown-toggle" href="#" id="addModuleTopButton" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <img id="addModuleTopAddIcon" src="~/images/Add_White.png" /> Add New Module
                    </button>

                    <ul class="dropdown-menu moduleDropdownMenu" aria-labelledby="addModuleTopButton">
                        <li><a class="dropdown-item moduleDropdownItem" asp-action="Create">Add New Module</a></li>
                        <li><a class="dropdown-item moduleDropdownItem" asp-action="Reframe">Add Module Reframe</a></li>
                    </ul>
                </div>



            }

            <!-- View Toggle Buttons using Bootstrap Pills -->
            <ul class="nav nav-pills module_list_grid_view" id="viewTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button data-bs-placement="bottom" data-bs-title="List Layout" class="nav-link" id="list-tab" data-bs-toggle="tab" data-bs-target="#list-view" type="button" role="tab" aria-controls="list-view" aria-selected="false" onclick="setView('list')">
                        <i class="fa fa-bars"></i>
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button data-bs-placement="bottom" data-bs-title="Grid Layout" class="nav-link" id="grid-tab" data-bs-toggle="tab" data-bs-target="#grid-view" type="button" role="tab" aria-controls="grid-view" aria-selected="true" onclick="setView('grid')">
                        <i class="fa fa-th-large"></i>
                    </button>
                </li>
            </ul>
        </div>
    </div>

    <hr class="custom-hr">

    <!-- Tab Content for Grid and List Views -->
    <div class="tab-content" id="viewTabContent">
        <!-- Grid View Tab -->
        <div class="tab-pane fade" id="grid-view" role="tabpanel" aria-labelledby="grid-tab">
            <div class="align-items-end flex-wrap ModuleCards_Container" id="moduleCardsContainer">
                @foreach (var module in Model)
                {
                    <!-- Module Card for Grid View -->
                    <div class="module_card @(module.IsUnlocked ? "" : "locked-module")" id="moduleCard-@module.ModuleId" style="padding-right: 2.1rem; padding-left: 2.1rem;">
                        <div class="moduleIcon_container" style="color: rgb(33, 37, 41); margin-left: 0px;">
                            <img class="ModuleTempIcon" src="~/images/GADO_Logo_white.png" />

                            <!-- Color Picker (Admin only) -->
                            <div class="picker-container">
                                <input id="colorPicker-@module.ModuleId"
                                       class="ColorInput"
                                       type="color"
                                       value="@module.Color"
                                @if (User.IsInRole("Admin"))
                                {
                                    <text>
                                        data-bs-toggle="tooltip"
                                        data-bs-placement="bottom"
                                        data-bs-title="Change Module Color"
                                    </text>
                                }
                                onchange="updateColor(@module.ModuleId, this.value)"
                                @(User.IsInRole("Admin") ? "" : "disabled") />
                            </div>
                        </div>

                        <!-- Module Title -->
                        <a asp-action="Details" asp-route-id="@module.ModuleId" class="module-link @(module.IsUnlocked ? "" : "disabled-link")">
                            <span id="ModuleTitle-@module.ModuleId" class="fw-bolder ModuleTitle">@module.Title</span>
                        </a>

                        <!-- Locked/Unlocked Indicator -->
                        @if (!module.IsUnlocked)
                        {
                            <span class="locked-badge" title="Complete the previous module to unlock this one.">Locked</span>
                        }

                        <!-- Number of Lesson Container -->
                        <div class="NumberOfLessonsContainer">
                            <img class="LessonIcon" src="~/images/lesson.png" />
                            <span id="NumberOfLessons" class="NumberOfLessons">@module.Lessons.Count()</span>
                            <span class="fw-normal LessonsText">lessons</span>
                        </div>

                        <!-- Like and View Count -->
                        <div class="LikeViewContainer">
                            <div class="LikeOnlyContainer">
                                <img class="LikeIcon" src="~/images/Like.png" />
                                <span id="LikeCount">0</span>
                            </div>

                            @if (User.IsInRole("Admin"))
                            {
                                <div class="ViewOnlyContainer">
                                    <img class="ViewIcon" src="~/images/View.png" />
                                    <span id="ViewCount">0</span>
                                </div>
                            }
                        </div>

                        @if (User.IsInRole("Admin"))
                        {
                            <div class="ModuleCard_LineBreak"></div>
                        }

                        @if (!(User.IsInRole("Admin")))
                        {
                            <div class="ModuleCard">

                                <div class="progress" id="progress-bar-@module.Module.ModuleId" role="progressbar"
                                     aria-label="Progress for @module.Module.Title"
                                     aria-valuenow="@module.ProgressPercentage"
                                     aria-valuemin="0"
                                     aria-valuemax="100"
                                     style="height: 8px;">
                                    <div class="progress-bar"
                                         style="width: @module.ProgressPercentage%; background-color: #52A035;">
                                    </div>
                                </div>

                                <div class="module-completed">
                                    <span>Module Completed</span>
                                    <span>@Math.Ceiling(module.ProgressPercentage)%</span>
                                </div>

                            </div>
                        }


                        <!-- Publish/Unpublish Button (Admin only) -->
                        @if (User.IsInRole("Admin"))
                        {
                            <div id="modCardButtonContainer" class="d-xxl-flex justify-content-between align-items-center">
                                <div id="toggleButtonPublishUnpublishModule" class="d-xxl-flex">
                                    @if (module.Status == ModuleStatus.Published)
                                    {
                                        <!-- Unpublish Button -->
                                        <button data-bs-toggle="modal" data-bs-target="#unpublishModal-@module.ModuleId" data-bs-placement="bottom" data-bs-title="Unpublish Module" type="button" class="btn toggle-content">
                                            <img class="PublishIcon" src="~/images/Unpublish.png" />
                                            <span>Unpublish</span>
                                        </button>
                                    }
                                    else
                                    {
                                        <!-- Publish Button -->
                                        <button data-bs-toggle="modal" data-bs-target="#publishModal-@module.ModuleId" data-bs-placement="bottom" data-bs-title="Publish Module" type="button" class="btn toggle-content">
                                            <img class="PublishIcon" src="~/images/Publish.png" />
                                            <span>Publish</span>
                                        </button>
                                    }
                                </div>

                                <!-- Edit and Delete Buttons (Admin only) -->
                                <div class="d-xxl-flex justify-content-xxl-end" style="margin-top: 19px;">
                                    <a asp-action="Edit" asp-route-id="@module.ModuleId" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Edit Module">
                                        <img id="EditModule-@module.ModuleId" class="Edit" src="~/images/Edit.png" />
                                    </a>
                                    <a data-bs-toggle="modal" data-bs-target="#moduleConfirmDeleteModal-@module.ModuleId" data-bs-placement="bottom" data-bs-title="Delete Module">
                                        <img id="DeleteModule-@module.ModuleId" class="Delete" src="~/images/Delete.png" />
                                    </a>
                                </div>
                            </div>
                        }




                    </div>
                }


                <!-- Module Card for the lesson reframe -->
                <div class="module_card" id="moduleCard" style="padding-right: 2.1rem; padding-left: 2.1rem;">
                    <div class="moduleIcon_container" style="color: rgb(33, 37, 41); margin-left: 0px;">
                        <img class="ModuleTempIcon" src="~/images/GADO_Logo_white.png" />

                        <!-- Color Picker (Admin only) -->
                        <div class="picker-container">
                            <input id="colorPicker"
                                   class="ColorInput"
                                   type="color"
                                   value="Color" />
                        </div>
                    </div>

                    <!-- Lesson Reframe Module Title -->
                    <a>
                        <span id="ModuleTitle" class="fw-bolder ModuleTitle">Lesson Reframe</span>
                    </a>

                    <!-- Number of Lesson Container -->
                    <div class="NumberOfLessonsContainer">
                        <img class="LessonIcon" src="~/images/lesson.png" />
                        <span id="NumberOfLessons" class="NumberOfLessons">4</span>
                        <span class="fw-normal LessonsText">session</span>
                    </div>

                    <div>
                        <a href="/module/reframe" class="btn btn-primary reframe-btn">
                            Take the Reframe
                        </a>
                    </div>


                </div>
                @if (User.IsInRole("Admin"))
                {
                    <!-- Add New Module Button -->
                    <a asp-action="Create" class="btn add-new-module">
                        <img class="d-xxl-flex add_icon" src="~/images/Add.png" /> Add New Module
                    </a>
                }

            </div>
        </div>

        <!-- List View Tab (Table Layout) -->
        <div class="tab-pane fade" id="list-view" role="tabpanel" aria-labelledby="list-tab">
            <!-- List View Table -->
            <div class="table-responsive">
                <table class="table table-hover modern-table">
                    <thead>
                        <tr class="module-table-label">
                            <th class="module-header-label text-start">Module Title</th>
                            <th class="module-header-label">No. of Lessons</th>

                            <!-- Conditionally display Status and Actions for Admins only -->
                            @if (User.IsInRole("Admin"))
                            {
                                <th class="module-header-label">Status</th>
                                <th class="module-header-label text-start">Actions</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var module in Model)
                        {
                            <tr class="module-table-rows">
                                <!-- Module Title -->
                                <td class="module-content text-start">
                                    <a asp-action="Details" asp-route-id="@module.ModuleId" class="module-title-link text-decoration-none @(module.IsUnlocked ? "" : "disabled-link")">
                                        @module.Title
                                    </a>
                                    @if (!module.IsUnlocked)
                                    {
                                        <span class="locked-badge text-danger ms-2">Locked</span>
                                    }
                                </td>

                                <!-- Number of Lessons -->
                                <td class="module-content">@module.Lessons.Count()</td>

                                <!-- Conditionally display Status and Actions for Admins only -->
                                @if (User.IsInRole("Admin"))
                                {
                                    <!-- Status (Published/Unpublished) -->
                                    <td class="module-content">
                                        @if (module.Status == ModuleStatus.Published)
                                        {
                                            <span class="text-success">Published</span>
                                        }
                                        else
                                        {
                                            <span class="text-danger">Unpublished</span>
                                        }
                                    </td>

                                    <!-- Actions (Edit/Delete/Publish/Unpublish) -->
                                    <td class="module-content text-start action-buttons">
                                        <a id="list-editModuleButton" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Edit Module" asp-action="Edit" asp-route-id="@module.ModuleId">
                                            <img src="~/images/Edit.png" /> Edit
                                        </a>

                                        <a id="list-deleteModuleButton" data-bs-toggle="modal" data-bs-placement="bottom" data-bs-title="Delete Module" data-bs-target="#moduleConfirmDeleteModal-@module.ModuleId">
                                            <img src="~/images/Delete.png" /> Delete
                                        </a>


                                        @if (module.Status == ModuleStatus.Published)
                                        {
                                            <!-- Unpublish Button -->
                                            <button type="button" id="list-unpublishModuleButton" class="btn btn-warning" data-bs-placement="bottom" data-bs-title="Unpublish Module" data-bs-toggle="modal" data-bs-target="#unpublishModal-@module.ModuleId">
                                                <img src="~/images/Unpublish.png" alt="Unpublish Icon" />
                                                Unpublish
                                            </button>
                                        }
                                        else
                                        {
                                            <!-- Publish Button -->
                                            <button type="button" id="list-publishModuleButton" class="btn btn-success" data-bs-placement="bottom" data-bs-title="Publish Module" data-bs-toggle="modal" data-bs-target="#publishModal-@module.ModuleId">
                                                <img src="~/images/Publish.png" alt="Publish Icon" />
                                                Publish
                                            </button>
                                        }
                                    </td>
                                }
                            </tr>
                        }
                        @if (User.IsInRole("Admin"))
                        {
                            <!-- "Add New Module" Row - Entire Row Clickable -->
                            <tr style="cursor: pointer;" onclick="location.href='@Url.Action("Create")';">
                                <td colspan="4" class="text-start text-muted" style="padding: 15px 8px 15px 8px">
                                    <i class="la la-plus"></i> Add New Module
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@foreach (var module in Model)
{
    <!-- Modal Structure for Deleting Modules -->
    <div class="modal fade" id="moduleConfirmDeleteModal-@module.ModuleId" tabindex="-1" aria-labelledby="moduleConfirmDeleteModalLabel-@module.ModuleId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="moduleConfirmDeleteModalLabel-@module.ModuleId">Delete Module?</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete the module titled "<strong>@module.Title</strong>"?
                </div>
                <div class="modal-footer">
                    <form asp-action="Delete" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@module.ModuleId" />
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary modal-del-btn" onclick="submitFormWithSpinner('@module.ModuleId')">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <!-- Unpublish Modal -->
    @if (module.Status == ModuleStatus.Published)
    {
        <div class="modal fade" id="unpublishModal-@module.ModuleId" tabindex="-1" aria-labelledby="unpublishModalLabel-@module.ModuleId" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="unpublishModalLabel-@module.ModuleId">Unpublish Module?</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to unpublish the module titled "<strong>@module.Title</strong>"? Unpublished modules will not be visible to users.
                    </div>
                    <div class="modal-footer">
                        <form asp-action="Unpublish" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@module.ModuleId" />
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-warning modal-del-btn">Unpublish</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Publish Modal -->
    @if (module.Status != ModuleStatus.Published)
    {
        <div class="modal fade" id="publishModal-@module.ModuleId" tabindex="-1" aria-labelledby="publishModalLabel-@module.ModuleId" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="publishModalLabel-@module.ModuleId">Publish Module?</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to publish the module titled "<strong>@module.Title</strong>"? Published modules will be visible to users.
                    </div>
                    <div class="modal-footer">
                        <form asp-action="Publish" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@module.ModuleId" />
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-success modal-del-btn">Publish</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Check localStorage for the last active tab
            const lastActiveTab = localStorage.getItem("activeTab") || "grid";

            // Set the active tab based on localStorage value
            const activeTabButton = document.querySelector(`#${lastActiveTab}-tab`);
            const activeTabPane = document.querySelector(`#${lastActiveTab}-view`);

            if (activeTabButton && activeTabPane) {
                // Remove the default active class
                document.querySelectorAll(".nav-link").forEach(tab => tab.classList.remove("active"));
                document.querySelectorAll(".tab-pane").forEach(pane => pane.classList.remove("show", "active"));

                // Add active class to the stored tab
                activeTabButton.classList.add("active");
                activeTabPane.classList.add("show", "active");
            }

            // Handle tooltips for list and grid view buttons
            const listTabButton = document.getElementById("list-tab");
            const gridTabButton = document.getElementById("grid-tab");
            [listTabButton, gridTabButton].forEach(button => {
                button.addEventListener("click", function () {
                    hideTooltip(button);
                });
            });

        });

        function setView(view) {
            // Save the active tab to localStorage
            localStorage.setItem("activeTab", view);
        }

        function updateColor(moduleId, color) {
            $.ajax({
                url: '@Url.Action("UpdateColor", "Module")',
                type: 'POST',
                data: {
                    id: moduleId,
                    Color: color,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    // Optionally, show a success message
                },
                error: function (xhr, status, error) {
                    alert('Error updating color: ' + error);
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Initialize tooltips for all elements with data-bs-toggle="tooltip" or data-bs-title
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"], [data-bs-title]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl, {
                    delay: { show: 500, hide: 100 }, // Delay in milliseconds (500ms to show, 100ms to hide)
                    trigger: 'hover focus' // Ensures it doesn't reopen on click
                });
            });

            // Function to forcefully hide a tooltip instance
            function hideTooltip(button) {
                const tooltipInstance = bootstrap.Tooltip.getInstance(button);
                if (tooltipInstance) {
                    tooltipInstance.hide(); // Hide the tooltip
                    setTimeout(() => {
                        tooltipInstance.dispose(); // Dispose to prevent lingering tooltips
                        new bootstrap.Tooltip(button, {
                            delay: { show: 500, hide: 100 } // Reinitialize with delay
                        }); // Reinitialize tooltip for future use
                    }, 150); // Slight delay for smooth hiding
                }
            }


            // Add event listeners for Publish and Unpublish buttons specifically
            const publishUnpublishButtons = document.querySelectorAll(
                'button[id^="list-publishModuleButton"], button[id^="list-unpublishModuleButton"], button[data-bs-target*="publishModal"], button[data-bs-target*="unpublishModal"]'
            );

            publishUnpublishButtons.forEach(button => {
                // Add click event to hide tooltip
                button.addEventListener('click', function () {
                    hideTooltip(button); // Forcefully hide tooltip on click
                });

                // Optional: Add hover event to emphasize delay if needed
                new bootstrap.Tooltip(button, {
                    delay: { show: 500, hide: 100 } // Specific delay for these buttons
                });
            });

            // Add event listeners for all buttons and links with tooltips
            const buttonsWithTooltips = document.querySelectorAll('button[data-bs-toggle="tooltip"], button[data-bs-title], a[data-bs-toggle="tooltip"], a[data-bs-title]');
            buttonsWithTooltips.forEach(button => {
                button.addEventListener('click', function () {
                    hideTooltip(button); // Forcefully hide tooltip on click
                });
            });

            // Handle dropdown button specifically
            var dropdownButton = document.getElementById('addModuleTopButton');
            if (dropdownButton) {
                dropdownButton.addEventListener('click', function () {
                    hideTooltip(dropdownButton);
                });
            }
        });
    </script>
}